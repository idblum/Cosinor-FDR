function [M,Amp,phi,RSS,RSSrnda] = Cosinor_FDR(TIME,dial,per,e,c,act)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Description: 
%   This algorithm uses the least squares method to fit a sine wave to a
%   time series. It then performs a non-parametric false discovery rate
%   analysis by randomly shuffling the temporal order of the original data
%   then reassesses the fit of the cosinor curve. By doing this iteratively
%   (Monte-Carlo Simulation) it is possible to determine the statistical
%   likelyhood that the fit is not a false discovery.
% 
%
%   The cosine fit follows cosinor analysis of a time series as outlined by
%   Nelson et al. "Methods for Cosinor-Rhythmometry" Chronobiologica.
%   1979.
%   
%   The FDR procedure follows a similar algorithm as presented in 
%   "Intrinsic Circadian Clock of the Mammalian Retina: Importance for
%   Retinal Processing of Visual Information" Cell. 2007.
%
% Input:
%   TIME    - time series
%   dial    - value of series to be modelled at TIME
%   per      - cycle length, defined by user based on prior knowledge of time
%                series, i.e. 24 hours
%   alpha   - type I error used for cofidence interval calculations. Usually 
%               set to be 0.05 which corresponds with 95% cofidence intervals
%   e       - row vector listing animal IDs for original data set
%   c       - number of the box used for recording locomotion
%   act   - original dataset from which the cosinor is modelled but given
%               only for the timespan of TIME 
%
%   M       - Mesor, the average cylce value
%   Amp     - Amplitude, half the distance between peaks of the fitted
%               waveform
%   phi     - Acrophase, time point in the cycle of highest amplitude (in
%               radians)
%   RSS     - Residual Sum of Squares, a measure of the deviation of the
%               cosinor fit from the original waveform
%
% Written by Ian David Blum 2014
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

if length(TIME) < 4
    error('There must be atleast four time measurements')
end

%% Parameter Estimation

n = length(TIME);
w=(1/per)*2*pi;

% Substituition
x = cos(w.*TIME);
z = sin(w.*TIME);

% Set up and solve the normal equations simultaneously
NE = [  n        sum(x)       sum(z)     sum(act);
      sum(x)   sum(x.^2)    sum(x.*z)    sum(x.*act);
      sum(z)   sum(x.*z)    sum(z.^2)    sum(z.*act);];

RNE = rref(NE);
M = RNE(1,4); beta = RNE(2,4); gamma = RNE(3,4);

%Calculate amplitude and acrophase from beta and gamma
Amp = sqrt(beta^2 + gamma^2);
theta = atan(abs(gamma/beta));

    % Calculate acrophase (phi) and convert from radians to degrees
a = sign(beta);
b = sign(gamma);
if (a == 1 || a == 0) && b == 1
    phi = -theta;
elseif a == -1 && (b == 1 || b == 0) 
    phi = -pi + theta;
elseif (a == -1 || a == 0) && b == -1
    phi = -pi - theta;
elseif a == 1 && (b == -1 || b == 0)
    phi = -2*pi + theta;
end

% Calculate Residual sum of errors
RSS = sum((dial - (M + beta.*x + gamma.*z)).^2);

% Display results
disp('Parameters:'); disp('---------------');
fprintf(1,'Mesor = %g \nAmplitude = %g \nAcrophase = %g \nRSS = %g \n\n',M,Amp,phi,RSS);

%Plot orginal data and cosine fit
wave = M + Amp*cos(w.*t+phi);

    figure('Units','normalized','Position',[0 0 1 0.33],'name','Cosinor Analysis');
    [AX,H1,H2]=plotyy(TIME,dial,TIME,act); hold on;
        xlabel('Time (hrs since start)');
        set(get(AX(1),'Ylabel'),'String','Dialysate Concentration (ng/ml)') 
        set(get(AX(2),'Ylabel'),'String','Horizontal Activity')
        set(AX(1),'xlim',[min(t) max(t)]);
        set(AX(2),'xlim',[min(t) max(t)]);
        set(AX(1),'ylim',[min(dial) max(dial)]);
        set(AX(2),'ylim',[min(act) max(act)]);
    plot(t,wave,'r');
        legend('Dialysate', 'Cosinor','Horizontal Activity');
        xlim([min(t) max(t)]);
        hold off
        
filename=strcat(num2str(e(c)),' Cosinor');
printeps(filename);
        
%% Random Permutations of DATA

%randomly shuffling data
permnum=100000;
for q=1:permnum;
indx = randperm(n);
Rnd = dial(indx);
RSSrnd(:,q) = sum((Rnd - (M + beta.*x + gamma.*z)).^2);
end

%False Discovery Rate
rssind=find(RSSrnd <= RSS);
FDRSS=length(rssind)/permnum*100;
RSSrnda=mean(RSSrnd);

%plotting histogram
[N,X]=hist(RSSrnd,100);
RSShist = find(X <= RSS);
figure
bar(X,N), hold on
bar(X(RSShist),N(RSShist),'facecolor','r')
xlabel('Summed Square of Errors')
filename=strcat(num2str(e(c)),' FDR Histogram');
printeps(filename);

%output values to excel
COSIN={'Animal ID',num2str(e(c)),'','Period (h)',per;...
        '','','','','';...
        '','M','Amp','phi','RSS';...
        'Sample',M,Amp,phi,RSS;...
        'Random','','','',RSSrnda;...
        'Stats','False Discovery Rate',FDRSS};
filename=strcat(num2str(e(c)),'_Cosinor.xlsx');
xlswrite(filename,COSIN);

%display computed FD Rate
fprintf(1,'Random Permutation False Discovery Rate \n')
fprintf(1,'------------------------------------------------------\n')
fprintf(1,'RSS                    RSSrandom               FDrate (Percentage)\n')
fprintf(1,'---------        ----------------------        -------------------\n')
fprintf(1,'  %.6f                   %.6f                         %g\n\n',RSS,RSSrnda,FDRSS)
